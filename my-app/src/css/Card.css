.card-wrapper {
  perspective: 1000px;
  -webkit-perspective: 1000px;
  width: max-content;
  display: inline-block;
  vertical-align: middle; /* prevents baseline shift when flipping */
}

/* remove perspective from .card and keep 3D setup on the element that flips */
.card {
  width: 100px;
  height: 140px;
  cursor: pointer;
  position: relative;
  display: block; /* ensure consistent layout inside inline wrapper */

  /* 3D flip setup */
  transform-style: preserve-3d;
  -webkit-transform-style: preserve-3d;
  transition: transform 0.6s ease;
  transform-origin: 50% 50%;
  -webkit-transform-origin: 50% 50%;

  /* promote to its own layer to avoid subpixel reflow/jump */
  will-change: transform;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
}

/* ensure faces keep correct visibility and occupy exact same box */
.front,
.back {
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0; /* ensure exact overlap */
  width: 100%;
  height: 100%;
  border-radius: 10px;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transition: transform 0.7s ease;
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.25);
}

/* ensure the flip is along the Y axis and stays in place */
.card.flipped {
  transform: rotateY(180deg) translateZ(0); /* keep translateZ to hold layer */
  -webkit-transform: rotateY(180deg) translateZ(0);
}

/* keep z-index predictable */
.card.flipped .front { z-index: 1; }
.card.flipped .back  { z-index: 2; }

/* Front & Back base styles */
.front,
.back {
  width: 100%;
  height: 100%;
  border-radius: 10px;
  position: absolute;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transition: transform 0.7s ease;
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.25);
}

/* FRONT SIDE (face of the card) */
.front {
  background: white;
  border: 2px solid #e0e0e0;
  position: relative;
  padding: 6px;
  font-family: "Georgia", serif;
  overflow: hidden;
  transform: rotateY(0deg);
  z-index: 2;
}

/* Rank centered in the middle of the card */
.rank {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 36px;
  font-weight: 700;
  color: black;
  line-height: 1;
  pointer-events: none;
}

/* Suit common style */
.suit {
  position: absolute;
  font-size: 18px;
  line-height: 1;
  pointer-events: none;
  color: black;
}

/* Top-left suit */
.suit.top-left {
  top: 6px;
  left: 8px;
  transform: none;
}

/* Bottom-right suit (rotated so it reads like a real playing card) */
.suit.bottom-right {
  bottom: 6px;
  right: 8px;
  transform: rotate(180deg);
}

/* BACK SIDE (card back pattern) */
.back {
  background: radial-gradient(circle at center, #2c2c2c 0%, #1a1a1a 100%);
  border: 2px solid #444;
  transform: rotateY(180deg);
  transform-origin: center;
  z-index: 1;
  background-image: repeating-linear-gradient(
    45deg,
    #111 0 10px,
    #222 10px 20px
  );
}

/* flipped state on the card container - rotate the whole card to reveal the back */
.card.flipped {
  transform: rotateY(180deg);
}
.card.flipped .front { z-index: 1; }
.card.flipped .back  { z-index: 2; }

/* Make hearts and diamonds red when suits are provided as characters (♥ or ♦) */
.card[data-suit="♥"] .rank,
.card[data-suit="♥"] .suit,
.card[data-suit="♦"] .rank,
.card[data-suit="♦"] .suit,
.suit[data-suit="♥"],
.suit[data-suit="♦"],
.card.heart .rank,
.card.heart .suit,
.suit.heart,
.card.diamond .rank,
.card.diamond .suit,
.suit.diamond {
  color: #c0392b; /* red for hearts & diamonds */
}

/* Responsive tweak if needed */
@media (max-width: 480px) {
  .card { width: 84px; height: 120px; }
  .rank { font-size: 28px; }
  .suit { font-size: 14px; }
}